/// <reference types="node" />
import type http from 'http';
import type { ManifestData } from '../@types/astro';
import { DevelopmentEnvironment } from '../core/render/dev/index';
declare type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (...args: any) => Promise<infer R> ? R : any;
export declare function matchRoute(pathname: string, env: DevelopmentEnvironment, manifest: ManifestData): Promise<{
    route: import("../@types/astro").RouteData;
    filePath: URL;
    preloadedComponent: import("../core/render/dev/index").ComponentPreload;
    mod: import("../@types/astro").ComponentInstance;
} | undefined>;
export declare function handleRoute(matchedRoute: AsyncReturnType<typeof matchRoute>, url: URL, pathname: string, body: ArrayBuffer | undefined, origin: string, env: DevelopmentEnvironment, manifest: ManifestData, req: http.IncomingMessage, res: http.ServerResponse): Promise<void>;
export {};
